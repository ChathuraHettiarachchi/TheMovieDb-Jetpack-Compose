# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
    desc "Runs all the tests"
    lane :test do
        gradle(task: "test")
    end

    desc "Deploy a new version to the Google Play"
    lane :deploy do
        fetch_and_increment_build_number

        gradle(
            task: "bundle", # or "assemble", if you want to build an APK
            build_type: "release",
            properties: {
                "android.injected.signing.store.file" => ENV["KEYSTORE_FILE"],
                "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
                "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
                "android.injected.signing.key.password" => ENV["KEY_PASSWORD"],
            }
        )

        upload_to_play_store(
            track: "internal",
            json_key: ENV["ANDROID_JSON_KEY_FILE"]
        )
    end

    desc "Fetches the latest version code from the Play Console and increments it by 1"
    lane :fetch_and_increment_build_number do
        app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)

        version_codes = google_play_track_version_codes(
            package_name: app_identifier,
            track: "internal",
            json_key: ENV["ANDROID_JSON_KEY_FILE"]
        )

        updated_version_code = version_codes[0] + 1

        increment_version_code(
            version_code: updated_version_code
        )
    end

     ######## FIREBASE DISTRIBUTION  ########
      desc "Submit a new Google Test Build to Firebase App Distribution"
      lane :firebase_release do |options|
         gradle(task: "clean")
         gradle(task: "assemble", flavor: "Google", build_type: "Debug")

          # find apk path
         output_path = "./app/build/outputs/apk/google/debug/"
         output_json_path = output_path + "output-metadata.json"
         build_output = load_json(json_path: output_json_path)
         elements = build_output["elements"][0]
         apk_path = output_path + elements["outputFile"]

         release_note_information = " BRANCH => #{git_branch} - developer: #{last_git_commit[:author]}"
         release_note = "#{release_note_information} \n #{options[:r]}"

         firebase_app_distribution(
               app: ENV["FIREBASE_APP_ID"],
               apk_path: apk_path,
               release_notes: "#{release_note}",
               groups_file: "fastlane/groups.txt",
               service_credentials_file: ENV["FIREBASE_LOGIN_CREDENTIALS"]
         )
      end
end
