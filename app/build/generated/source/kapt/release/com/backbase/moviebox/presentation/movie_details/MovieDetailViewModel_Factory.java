// Generated by Dagger (https://dagger.dev).
package com.backbase.moviebox.presentation.movie_details;

import androidx.lifecycle.SavedStateHandle;
import com.backbase.moviebox.domain.use_case.get_details.GetMovieDetailsUseCase;
import com.backbase.moviebox.domain.use_case.get_genres.GetMovieGenresUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MovieDetailViewModel_Factory implements Factory<MovieDetailViewModel> {
  private final Provider<GetMovieDetailsUseCase> movieDetailsUseCaseProvider;

  private final Provider<GetMovieGenresUseCase> genresUseCaseProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public MovieDetailViewModel_Factory(Provider<GetMovieDetailsUseCase> movieDetailsUseCaseProvider,
      Provider<GetMovieGenresUseCase> genresUseCaseProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    this.movieDetailsUseCaseProvider = movieDetailsUseCaseProvider;
    this.genresUseCaseProvider = genresUseCaseProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public MovieDetailViewModel get() {
    return newInstance(movieDetailsUseCaseProvider.get(), genresUseCaseProvider.get(), savedStateHandleProvider.get());
  }

  public static MovieDetailViewModel_Factory create(
      Provider<GetMovieDetailsUseCase> movieDetailsUseCaseProvider,
      Provider<GetMovieGenresUseCase> genresUseCaseProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    return new MovieDetailViewModel_Factory(movieDetailsUseCaseProvider, genresUseCaseProvider, savedStateHandleProvider);
  }

  public static MovieDetailViewModel newInstance(GetMovieDetailsUseCase movieDetailsUseCase,
      GetMovieGenresUseCase genresUseCase, SavedStateHandle savedStateHandle) {
    return new MovieDetailViewModel(movieDetailsUseCase, genresUseCase, savedStateHandle);
  }
}
