// Generated by Dagger (https://dagger.dev).
package com.backbase.moviebox.presentation.most_popular;

import com.backbase.moviebox.domain.use_case.get_popular.GetPopularMoviesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MostPopularViewModel_Factory implements Factory<MostPopularViewModel> {
  private final Provider<GetPopularMoviesUseCase> popularMoviesUseCaseProvider;

  public MostPopularViewModel_Factory(
      Provider<GetPopularMoviesUseCase> popularMoviesUseCaseProvider) {
    this.popularMoviesUseCaseProvider = popularMoviesUseCaseProvider;
  }

  @Override
  public MostPopularViewModel get() {
    return newInstance(popularMoviesUseCaseProvider.get());
  }

  public static MostPopularViewModel_Factory create(
      Provider<GetPopularMoviesUseCase> popularMoviesUseCaseProvider) {
    return new MostPopularViewModel_Factory(popularMoviesUseCaseProvider);
  }

  public static MostPopularViewModel newInstance(GetPopularMoviesUseCase popularMoviesUseCase) {
    return new MostPopularViewModel(popularMoviesUseCase);
  }
}
