// Generated by Dagger (https://dagger.dev).
package com.backbase.moviebox.di;

import com.backbase.moviebox.data.remote.MovieDbAPI;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesMovieDbAPIFactory implements Factory<MovieDbAPI> {
  private final Provider<OkHttpClient> clientProvider;

  public AppModule_ProvidesMovieDbAPIFactory(Provider<OkHttpClient> clientProvider) {
    this.clientProvider = clientProvider;
  }

  @Override
  public MovieDbAPI get() {
    return providesMovieDbAPI(clientProvider.get());
  }

  public static AppModule_ProvidesMovieDbAPIFactory create(Provider<OkHttpClient> clientProvider) {
    return new AppModule_ProvidesMovieDbAPIFactory(clientProvider);
  }

  public static MovieDbAPI providesMovieDbAPI(OkHttpClient client) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesMovieDbAPI(client));
  }
}
